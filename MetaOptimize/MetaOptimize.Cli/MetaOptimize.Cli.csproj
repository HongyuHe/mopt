<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net7.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>disable</Nullable>
		<Platforms>x64</Platforms>
		<PlatformTarget>x64</PlatformTarget>
		<StartupObject>MetaOptimize.Cli.Program</StartupObject>
	</PropertyGroup>

	<Import Project="..\.stylecop\StyleCop.props" />

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.8.0" />
    <PackageReference Include="Gurobi.Optimizer" Version="10.0.2" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="QuikGraph" Version="2.3.0" />
    <PackageReference Include="ZenLib" Version="2.2.4" />
  </ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\MetaOptimize\MetaOptimize.csproj" />
	</ItemGroup>

	<!-- The remainder of this file automatically runs 'robocopy' to mirror the project output if remote debugging is enabled -->
	<UsingTask TaskName="LaunchSettingsParser" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<Enabled Output="true" />
			<Machine Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System.IO" />
			<Using Namespace="System.Linq" />
			<Code Type="Fragment" Language="cs">
<![CDATA[
var path = "Properties/launchSettings.json";
if (!File.Exists(path))
{
	Enabled = "false";
	return true;
}
var lines = File.ReadAllLines(path);
Enabled = lines.Single(l => l.Contains("remoteDebugEnabled")).Split(':')[1].Trim().TrimEnd(',').Trim();
Machine = lines.Single(l => l.Contains("remoteDebugMachine")).Split(':')[1].Trim().TrimEnd(',').Trim().Replace("\"", "");
]]>
			</Code>
		</Task>
	</UsingTask>
	<Target Name="ParseLaunchSettings" AfterTargets="PostBuildEvent">
		<LaunchSettingsParser>
			<Output PropertyName="RemoteDebugEnabled" TaskParameter="Enabled" />
			<Output PropertyName="RemoteMachine" TaskParameter="Machine" />
		</LaunchSettingsParser>
	</Target>
	<Target Condition="$(RemoteDebugEnabled)" Name="PostBuild" AfterTargets="ParseLaunchSettings">
		<!-- Some error code trickery needed since robocopy has successful nonzero exit codes -->
		<Exec Command="robocopy $(MSBuildProjectDirectory)\$(OutDir) \\$(RemoteMachine)\\$(MSBuildProjectDirectory.Replace(':', '$'))\$(OutDir) &amp; if %errorlevel% leq 3 exit 0" />
	</Target>
</Project>
